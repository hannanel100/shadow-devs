// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleName {
  MENTOR
  MENTEE
  ADMIN
}

enum Tags {
  JAVASCRIPT
  REACT
  NODE
  PYTHON
  DJANGO
  FLASK
  RUBY
  RAILS
  C
  JAVA
  SWIFT
  KOTLIN
  GO
  RUST
  PHP
  HTML
  CSS
  SASS
  LESS
  BOOTSTRAP
  MATERIALIZE
  TAILWIND
  ANGULAR
  VUE
  TYPESCRIPT
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId], name: "provider_providerAccountId")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?   @unique
  rating        Float?
  role          RoleName  @default(MENTEE)
  location      String?
  bio           String?
  tags          Tags[]
  accounts      Account[]
  sessions      Session[]
  mentorId      String?
  mentor        User?     @relation("MentorMentees", fields: [mentorId], references: [id])
  mentee        User[]    @relation("MentorMentees")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
